name: Run Pytest with Coverage + Coveralls

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "MONGO_INITDB_ROOT_USERNAME=user" >> .env
          echo "MONGO_INITDB_ROOT_PASSWORD=pass" >> .env
          echo "CLUSTER_URL=mongodb" >> .env
          echo "ME_CONFIG_MONGODB_ADMINUSERNAME=user" >> .env
          echo "ME_CONFIG_MONGODB_ADMINPASSWORD=pass" >> .env
          echo "ME_CONFIG_MONGODB_URL=mongodb://user:pass@mongodb/" >> .env
          echo "ME_CONFIG_BASICAUTH=false" >> .env

      - name: Create application.yml
        run: |
          mkdir -p ./backend  # Ensure the backend directory exists
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}" >> ./backend/application.yml
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}" >> ./backend/application.yml
          echo "CONF_URL: ${{ secrets.CONF_URL }}" >> ./backend/application.yml
          echo "SECRET_KEY: ${{ secrets.SECRET_KEY }}" >> ./backend/application.yml

      - name: Build and start all services with environment variables
        run: |
          docker compose -f docker-compose.yaml --env-file .env up -d --build

      - name: Run tests and upload to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          docker compose run --rm \
            -e COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }} \
            api bash -c "
              pip install coveralls &&
              pytest --cov=. --cov-report=xml &&
              coveralls --service=github
            "

      - name: Shut down services
        if: always()
        run: docker compose down
